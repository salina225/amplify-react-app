{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","aws-exports.js","index.js"],"names":["App","useState","coins","updateCoins","fetchCoins","a","updateLoading","limit","input","start","API","get","data","console","error","useEffect","updateInput","updateInputValues","type","value","loading","className","placeholder","onChange","e","target","onClick","map","coin","index","name","symbol","price_usd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","awsmobile","Amplify","configure","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAAe,I,cCsGAA,EAzFH,WAAM,MAGaC,mBAAS,IAHtB,mBAGTC,EAHS,KAGFC,EAHE,KAQTC,EAAU,uCAAI,gCAAAC,EAAA,sEAGjBC,GAAc,GAENC,EAAiBC,EAAjBD,MAAOE,EAAUD,EAAVC,MALE,SAMEC,IAAIC,IAAI,eAAR,uBAAwCJ,EAAxC,kBAAuDE,IANzD,OAMXG,EANW,OAOjBT,EAAYS,EAAKV,OAEjBI,GAAc,GATG,kDAajBO,QAAQC,MAAR,MAbiB,0DAAJ,qDAkBjBC,qBACE,WACAX,MAEA,IA9Bc,MAkCaH,mBAAS,CAAEM,MAAO,EAAGE,MAAO,IAlCzC,mBAkCTD,EAlCS,KAkCFQ,EAlCE,KAqCVC,EAAoB,SAACC,EAAMC,GAC7BH,EAAY,2BACPR,GADM,kBAENU,EAAOC,MAxCA,EA4CelB,oBAAS,GA5CxB,mBA4CXmB,EA5CW,KA4CFd,EA5CE,KAgDhB,OACE,sBAAKe,UAAU,MAAf,UAEA,uBACEC,YAAY,yBACZC,SAAU,SAAAC,GAAC,OAAIP,EAAkB,QAASO,EAAEC,OAAON,UAGrD,uBACEI,SAAU,SAAAC,GAAC,OAAIP,EAAkB,QAASO,EAAEC,OAAON,QACnDG,YAAY,kBAGhB,wBACEI,QAAStB,EADX,yBAMCgB,GAAW,6CAGLA,GACDlB,EAAMyB,KACJ,SAACC,EAAMC,GAAP,OACA,gCAEE,+BACCD,EAAKE,KADN,MACeF,EAAKG,UAEpB,mCACEH,EAAKI,eALJH,UC3EAI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCQCQ,EAZG,CACd,mBAAsB,YACtB,uBAA0B,CACtB,CACI,KAAQ,eACR,SAAY,+DACZ,OAAU,e,MCAtBC,QAAQC,UAAUC,GAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.1f58d987.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import\nReact\n, {\n  useState\n  , useEffect\n}\nfrom 'react';\n\nimport { API } from 'aws-amplify';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nconst App = () => {\n\n  // Create coins variable and set to empty array\n  const [coins, updateCoins] = useState([]);\n\n  //let coins = [];\n\n  // Define function to all API\n  const  fetchCoins =  async () => {\n\n    try {\n      updateLoading(true);\n\n      const { limit, start } = input;\n      const data = await API.get('cryptoapi225', `/coins?limit=${limit}&start=${start}`);\n      updateCoins(data.coins);\n\n      updateLoading(false);\n    }\n\n    catch (err) {\n      console.error(err);\n    }\n};\n\n  // Call fetchCoins function when component loads\n  useEffect(\n    () => {\n    fetchCoins();\n  }\n  , []\n);\n\n// Create additional state to hold user input for limit and start properties\n  const [input, updateInput] = useState({ limit: 5, start: 0 });\n\n// Create a new function to allow users to update the input values\n  const updateInputValues = (type, value) => {\n      updateInput({\n        ...input\n        , [type]: value\n   });\n};\n\nconst [loading, updateLoading] = useState(true);\n\n\n\n  return (\n    <div className=\"App\">\n\n    <input\n      placeholder=\"Enter a starting index\"\n      onChange={e => updateInputValues('start', e.target.value)}\n    />\n\n    <input\n      onChange={e => updateInputValues('limit', e.target.value)}\n      placeholder=\"Enter a limit\"\n    />\n\n  <button\n    onClick={fetchCoins}\n  >\n    Fetch Coins\n  </button>\n\n  {loading && <h2>Loading...</h2>}\n\n  {\n        !loading &&\n        coins.map(\n          (coin, index) => (\n          <div\n          key={index}>\n            <h2>\n            {coin.name} - {coin.symbol}\n            </h2>\n            <h5>\n            ${coin.price_usd}\n            </h5>\n          </div>\n        )\n      )\n    }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"cryptoapi225\",\n            \"endpoint\": \"https://08fgz6ywyk.execute-api.us-east-1.amazonaws.com/local\",\n            \"region\": \"us-east-1\"\n        }\n    ]\n};\n\n\nexport default awsmobile;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Amplify from 'aws-amplify';\nimport config from './aws-exports';\n\nAmplify.configure(config);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}